# Generated by BehavEd
# ( "WARNING--testing only--do not use" )
# ( "see if player has decryption module" )
module = getGameFlag("protocols", 3 )
if module == 1
     remove ( "pre_module", "pre_module" )
     # ( "removing the pre_module after having pre_overload conv would leave" )
     # ( "the module door without any useable trigger. fix that by enabling post_module here." )
     setEnable("post_module", "TRUE" )
endif
# ( "see if machine destruction complete" )
complete = getGameFlag("protocols", 5 )
if complete == 1
     remove ( "pre_overload", "pre_overload" )
     # ( "destroy machines, remove fx, remove spark_trap" )
     killEntitySilent("machine" )
     remove ( "fx_explosion", "fx_explosion" )
     remove ( "spark_trap", "spark_trap" )
     # ( "make generator inactive" )
     setEnable("generator", "FALSE" )
     remove ( "relay_generator", "relay_generator" )
     remove ( "gen_powerup_trigger", "gen_powerup_trigger" )
     # ( "prepare teleporter" )
     act("teleporter", "teleporter" )
     remove ( "no_go_trigger", "no_go_trigger" )
     setEnable("link_center", "TRUE" )
     setEnable("teleport_chat", "TRUE" )
     # ( "update objectives" )
else
     # ( "has pre_overload been used once already?" )
     check = getGameFlag("protocols", 15 )
     if check == 1
          # ( "pre_overload has been used once already..." )
          # ( "...prepare the next stage of the puzzle" )
          setEnable("pre_overload", "FALSE" )
          setHintType("gen_powerup_trigger", "OBJECTIVE" )
          # ( "has gen_powerup_trigger been used?" )
          check = getObjective("act3_obj_3a_a", "COMPLETE" )
          if check == 1
               # ( "gen_powerup_trigger has been used..." )
               # ( "...prepare pre_overload for its second and final use" )
               remove ( "gen_powerup_trigger", "gen_powerup_trigger" )
               setEnable("pre_overload", "TRUE" )
          endif
     endif
endif
# ( "see if door is open and if it isn't, then it open it" )
is_door_open = getGameFlag("protocols", 6 )
if is_door_open == 1
     remove ( "pre_module", "pre_module" )
     remove ( "post_module", "post_module" )
     # ( "If is_door_open is == 1 then the door should be open" )
     is_door_closed = getOpened("module_door" )
     if is_door_closed == 0
          # ( "If is_door_closed == 0 then the door is closed, but should be open" )
          act("module_door", "module_door" )
          remove ( "pre_module", "pre_module" )
          remove ( "post_module", "post_module" )
     endif
endif
visited = getGameFlag("act3_visit", 6 )
if visited == 0
     # ( "conversation with hudson here" )
     startConversation("act3/infinite/infinite2/3_infinite2_0010" )
     objective ( "act3_obj_3a_a",  "EOBJCMD_SHOW" )
     # ( "we don't want the module door triggers enabled until after" )
     # ( "you have the pre_overload conv" )
     setEnable("pre_module", "FALSE" )
     setEnable("post_module", "FALSE" )
endif
setGameFlag("act3_visit", 6, 1 )

